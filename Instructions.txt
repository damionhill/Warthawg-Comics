Instructions to update website:


Updating Catalog Data:
- edit the spreadsheet page
- file -> download -> CSV (comma separated value)
- csv2json website -> convert file to json + copy info 
- go to corresponding data page for the spreadsheet in VSCode (src -> Data)
- CTRL + A to select all. Delete everything.
- type "export const data = " then paste the copied JSON info after
- add a semicolon after the ] bracket at the very bottom
- CTRL + S to save
- Building Website instructions are next step


Updating Event Data:
- Open src -> views -> Events.js
- To add an event, copy the commented out template and fill in the new event's info
- CTRL + S to save
- Building Website instructions are next step


Building Website:
- At the top bar, click "terminal"
- Click "new terminal"
- Copy and paste this command into the terminal at the bottom: 'npm run build' then enter
- The command is done running when you see "The build folder is ready to be deployed"
- This creates the new build folder that gets uploaded to filezilla
- Uploading to Filezilla instructions are next step


Uploading to Filezilla:
- Upload the contents of the build folder, making sure not to upload the folder itself
- Confirm correct filezilla setup using FilezillaCorrectSetup.png
- Pushing to GitHub instructions is next step


Pushing to Github: (do this so I can also have access to your changes and so that the most current version of the site is stored online)
- The source control tab is the one that looks like little branches with circles. Click on it. 
- First, stage the changes by clicking the "source control" dropdown then hitting the plus sign ("stage all changes")
- Next, create a commit. The changes should move to the "staged changes" dropdown. Above that in another heading, click the checkmark to commit.
- Add a message describing your changes then hit enter.
- Push to github. Click on the "commits" dropdown. Then, click the up arrow to push. Make sure "push to origin" is higlighted. Hit enter.
- Finally, create a pull request on github.com. Open the github website and go to WarthawgComics by Damion Hill. (should be what I have bookmarked)
- In the header, click "pull requests." Select the green button that says "compare and pull request"
- Write a comment describing the changes. Submit the request. 
- After this, there's nothing left for you to do. I will review the code and then accept the request.

Pulling from Github: (If I ever make changes and you need to pull them from the repository)
- At the top bar, click "terminal"
- Click "new terminal"
- Copy and paste this command into the terminal at the bottom: 'git fetch upstream main' then enter
- Copy and paste this command into the terminal at the bottom: 'git pull upstream main' then enter


Add Photos To Mobile Version Image Carousel:
- First, email yourself the photo and download it.
- In your file explorer, move the image to WarthawgComics -> src -> Gallery Images
- In VSCode, open the src -> Gallery Images folder
- The image will be named something weird. Rename it with the naming scheme of the other images. So if there's ten images, rename it
"Gallery11.jpg" etc.
- Navigate to the SliderData.js" file. Src folder -> Data folder -> SliderData.js
- At the top, import the image like all the others. so type "import image# from "../Gallery Images/Gallery#.jpg" "
- After the last } bracket but before the final ] bracket, copy one of the other images - meaning, copy all of " { image: image}, "
making sure to include the comma
- Replace the image# after the colon with whatever you imported at the top
- CTRL + S to save

Replace one of the 6 Displayed Desktop Home Images:
- If you already have the image on your mobile image carousel, skip the next few steps where you put the image in the Gallery Images
folder and rename it. Otherwise, follow the next few steps.
- First, email yourself the photo and download it.
- In your file explorer, move the image to Warthawg-Comics -> src -> Gallery Images
- In VSCode, open the src -> Gallery Images folder
- The image will be named something weird. Rename it with the naming scheme of the other images. So if there's ten images, rename it
"Gallery11.jpg" etc.
- Navigate to the DesktopImageData.js file. src -> Data -> DesktopImageData.js
- You will be replacing one of the existing images with the new one.
- Rename one of the import statements at the top to be whatever you named the image in the Gallery Images folder
- CTRL + S to save






